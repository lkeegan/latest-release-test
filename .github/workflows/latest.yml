name: Update latest release

on: push

jobs:
  update-latest-tag:
    name: Update latest tag and remove existing latest release
    if: github.repository == 'lkeegan/latest-release-test' # don't do this on forks!
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - run: git status
      - run: git log
      - run: git show-ref --tags
      - name: Delete any existing latest release
        if: github.ref == 'refs/heads/main'
        run: gh release delete latest || echo "No latest release found to delete"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Move latest tag
        if: github.ref == 'refs/heads/main'
        run: |
          git push origin :refs/tags/latest
          git tag -f latest
          git push origin latest
      - run: git status
      - run: git log
      - run: git show-ref --tags

  build:
    name: Build the release binaries
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          submodules: 'true'
      - run: git status
      - run: git log
      - run: git show-ref --tags
      - run: git log > git-log.txt
      - uses: actions/upload-artifact@v2
        with:
          path: ./git-log.txt

  release-latest:
    needs: [build, update-latest-tag]
    runs-on: ubuntu-20.04
    # upload binaries to "latest" release if on main branch of original repo (don't do this on a fork)
    if: github.repository == 'lkeegan/latest-release-test' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - run: git status
      - run: git log
      - run: git show-ref --tags
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: binaries
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: binaries/*
          tag: latest
          overwrite: true
          file_glob: true
          prerelease: true
          body: "Latest pre-release versions"
